name: Deploy Terraform Resources on AWS

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'

permissions:
  id-token: write
  contents: read

jobs:
  generate-changed-files:
    runs-on: ubuntu-latest
    name: Generate Changed Files
    outputs:
      dirs: ${{ steps.check-dirs.output.dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get list of changes
        id: changed-files
        uses: tj-actions/changed-files@v46.0.3
        with:
          dir_names: "true"
          separator: ','
      
      - name: Generate Matrix
        id: check-dirs
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" > directories.txt
          if [ -s directories.txt ]; then
            echo "dirs=$(cat directories.txt)" >> $GITHUB_OUTPUT
          else
            echo "dirs=[]" >> $GITHUB_OUTPUT
          fi
  terraform:
    runs-on: ubuntu-latest
    needs: generate-changed-files
    if: ${{ needs.generate-changed-files.outputs.dirs != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.generate-changed-files.outputs.dirs) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'
      
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"


      - name: AWS Credentials Setup
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init and Plan
        working-directory: ${{ matrix.dir }}
        run: make verify

      - name: Apply Terraform
        if: ${{ github.ref == 'refs/heads/main' }}
        working-directory: ${{ matrix.dir }}
        run: make deploy
